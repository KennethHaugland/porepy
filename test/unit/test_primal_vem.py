import numpy as np
import scipy.sparse as sps
import unittest

from porepy.grids import grid, structured, simplex
from porepy.params import tensor
from porepy.params.bc import BoundaryCondition
from porepy.params.data import Parameters

from porepy.numerics.vem import primal
import porepy.utils.comp_geom as cg

#------------------------------------------------------------------------------#

class BasicsTest( unittest.TestCase ):

#------------------------------------------------------------------------------#

    def test_primal_vem_1d_iso(self):
        g = structured.CartGrid(3, 1)
        g.compute_geometry()

        kxx = np.ones(g.num_cells)
        perm = tensor.SecondOrder(3, kxx, kyy=1, kzz=1)
        bf = g.tags['domain_boundary_faces'].nonzero()[0]
        bc = BoundaryCondition(g, bf, bf.size*['neu'])

        solver = primal.PrimalVEM(physics='flow')

        param = Parameters(g)
        param.set_tensor(solver, perm)
        param.set_bc(solver, bc)
        M = solver.matrix(g, {'param': param}).todense()

        M_known = np.matrix([[ 3., -3.,  0.,  0.],
                             [-3.,  6., -3.,  0.],
                             [ 0., -3.,  6., -3.],
                             [ 0.,  0., -3.,  3.]])

        assert np.allclose(M, M.T)
        assert np.allclose(M, M_known)

#------------------------------------------------------------------------------#

    def test_primal_vem_2d_triangle(self):

        dim = 2
        nodes = np.array([[0, 1, 0],
                          [0, 0, 1],
                          [0, 0, 0]])

        indices = [0, 1, 1, 2, 2, 0]
        indptr = [0, 2, 4, 6]
        face_nodes = sps.csc_matrix(([True]*6, indices, indptr))
        cell_faces = sps.csc_matrix([[1], [1], [1]])
        name = "test"

        g = grid.Grid(dim, nodes, face_nodes, cell_faces, name)
        g.compute_geometry()

        kxx = np.ones(g.num_cells)
        perm = tensor.SecondOrder(3, kxx, kyy=1, kzz=1)
        bf = g.tags['domain_boundary_faces'].nonzero()[0]
        bc = BoundaryCondition(g, bf, bf.size*['neu'])

        solver = primal.PrimalVEM(physics='flow')

        param = Parameters(g)
        param.set_tensor(solver, perm)
        param.set_bc(solver, bc)
        M = solver.matrix(g, {'param': param}).todense()

        M_known = np.matrix([[  2, -1., -1.],
                             [ -1,  1.,  0.],
                             [ -1,  0.,  1.]])/2.

        assert np.allclose(M, M.T)
        assert np.allclose(M, M_known)

#------------------------------------------------------------------------------#

    def test_primal_vem_2d_square(self):

        dim = 2
        nodes = np.array([[0, 1, 1, 0],
                          [0, 0, 1, 1],
                          [0, 0, 0, 0]])

        indices = [0, 1, 1, 2, 2, 3, 3, 0]
        indptr = [0, 2, 4, 6, 8]
        face_nodes = sps.csc_matrix(([True]*8, indices, indptr))
        cell_faces = sps.csc_matrix([[1], [1], [1], [1]])
        name = "test"

        g = grid.Grid(dim, nodes, face_nodes, cell_faces, name)
        g.compute_geometry()

        kxx = np.ones(g.num_cells)
        perm = tensor.SecondOrder(3, kxx, kyy=1, kzz=1)
        bf = g.tags['domain_boundary_faces'].nonzero()[0]
        bc = BoundaryCondition(g, bf, bf.size*['neu'])

        solver = primal.PrimalVEM(physics='flow')

        param = Parameters(g)
        param.set_tensor(solver, perm)
        param.set_bc(solver, bc)
        M = solver.matrix(g, {'param': param}).todense()

        M_known = np.matrix([[ 3., -1., -1., -1.],
                             [-1.,  3., -1., -1.],
                             [-1., -1.,  3., -1.],
                             [-1., -1., -1.,  3.]])/4

        assert np.allclose(M, M.T)
        assert np.allclose(M, M_known)

#------------------------------------------------------------------------------#

    def test_primal_vem_2d_pentagon(self):

        dim = 2
        nodes = np.array([[0, 3, 3, 3/2., 0],
                          [0, 0, 2, 4, 4],
                          [0, 0, 0, 0, 0]])

        indices = [0, 1, 1, 2, 2, 3, 3, 4, 4, 0]
        indptr = [0, 2, 4, 6, 8, 10]
        face_nodes = sps.csc_matrix(([True]*10, indices, indptr))
        cell_faces = sps.csc_matrix([[1], [1], [1], [1], [1]])
        name = "test"

        g = grid.Grid(dim, nodes, face_nodes, cell_faces, name)
        g.compute_geometry()


        kxx = np.ones(g.num_cells)
        perm = tensor.SecondOrder(3, kxx, kyy=1, kzz=1)
        bf = g.tags['domain_boundary_faces'].nonzero()[0]
        bc = BoundaryCondition(g, bf, bf.size*['neu'])

        solver = primal.PrimalVEM(physics='flow')

        param = Parameters(g)
        param.set_tensor(solver, perm)
        param.set_bc(solver, bc)
        M = solver.matrix(g, {'param': param}).todense()

        M_known = np.matrix([\
                   [1091/1470., -289/1470., -407/1193., -379/1470., 157/2940.],
                   [-289/1470., 1091/1470., -596/1747., -199/1470.,  -29/420.],
                   [-407/1193., -596/1747.,   477/482.,  107/2940., -254/739.],
                   [-379/1470., -199/1470.,  107/2940., 1271/1470., -357/703.],
                   [ 157/2940.,   -29/420.,  -254/739.,  -357/703.,  679/783.]])

        assert np.allclose(M, M.T)
        assert np.allclose(M, M_known)

#------------------------------------------------------------------------------#

    def test_primal_vem_2d_iso_simplex(self):
        g = simplex.StructuredTriangleGrid([1, 1], [1, 1])
        g.compute_geometry()

        from porepy.viz.plot_grid import plot_grid
        plot_grid(g, alpha=0, info='all')

        kxx = np.ones(g.num_cells)
        perm = tensor.SecondOrder(3, kxx=kxx, kyy=kxx, kzz=1)

        bf = g.tags['domain_boundary_faces'].nonzero()[0]
        bc = BoundaryCondition(g, bf, bf.size * ['neu'])
        solver = primal.PrimalVEM(physics='flow')

        param = Parameters(g)
        param.set_tensor(solver, perm)
        param.set_bc(solver, bc)
        M = solver.matrix(g, {'param': param}).todense()

        M_known = np.matrix([[  2, -1, -1,  0],
                             [ -1,  2,  0, -1],
                             [ -1,  0,  2, -1],
                             [  0, -1, -1,  2]])/2.

        assert np.allclose(M, M.T)
        assert np.allclose(M, M_known)

#------------------------------------------------------------------------------#

    def test_primal_vem_3d_iso_cart(self):
        g = structured.CartGrid([2, 2, 2], [1, 1, 1])
        g.compute_geometry()

        kxx = np.ones(g.num_cells)
        perm = tensor.SecondOrder(3, kxx=kxx, kyy=kxx, kzz=kxx)

        bf = g.tags['domain_boundary_faces'].nonzero()[0]
        bc = BoundaryCondition(g, bf, bf.size*['neu'])
        solver = primal.PrimalVEM(physics='flow')

        param = Parameters(g)
        param.set_tensor(solver, perm)
        param.set_bc(solver, bc)
        M = solver.matrix(g, {'param': param}).todense()
        #np.savetxt('matrix.txt', M, delimiter=',', newline='],\n[')
        M_known = matrix_for_test_primal_vem_3d_iso_cart()

        assert np.allclose(M, M.T)
        assert np.allclose(M, M_known)

#------------------------------------------------------------------------------#

    def test_primal_vem_2d_iso_simplex_convergence(self):

        p_ex = lambda pt: pt[0, :]-2*pt[1, :]

        g = simplex.StructuredTriangleGrid([1, 1], [1, 1])
        g.compute_geometry()

        from porepy.viz.plot_grid import plot_grid
        plot_grid(g, alpha=0, info='all')

        kxx = np.ones(g.num_cells)
        perm = tensor.SecondOrder(3, kxx=kxx, kyy=kxx, kzz=1)

        bf = g.tags['domain_boundary_faces'].nonzero()[0]
        bc = BoundaryCondition(g, bf, bf.size*['dir'])
        bc_val = np.zeros(g.num_faces)
        bc_val[bf] = p_ex(g.face_centers[:, bf])
        solver = primal.PrimalVEM(physics='flow')

        param = Parameters(g)
        param.set_tensor(solver, perm)
        param.set_bc(solver, bc)
        param.set_bc_val(solver, bc_val)

        M, rhs = solver.matrix_rhs(g, {'param': param})
        p = sps.linalg.spsolve(M, rhs)
        print(p_ex(g.nodes))
        print(p)
        print(rhs)

#------------------------------------------------------------------------------#

def matrix_for_test_primal_vem_3d_iso_cart():
    return np.array([
        [5.937500000000000000e-01,-2.187500000000000000e-01,0.000000000000000000e+00,-2.187500000000000000e-01,-3.125000000000002776e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-2.187500000000000000e-01,-3.125000000000002082e-02,0.000000000000000000e+00,-3.125000000000000694e-02,1.562500000000000555e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [-2.187500000000000000e-01,1.187500000000000000e+00,-2.187500000000000000e-01,-3.124999999999999653e-02,-4.375000000000000000e-01,-3.125000000000002776e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000002082e-02,-4.375000000000000000e-01,-3.125000000000002082e-02,1.562500000000000555e-01,-6.250000000000001388e-02,1.562500000000000555e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [0.000000000000000000e+00,-2.187500000000000000e-01,5.937500000000000000e-01,0.000000000000000000e+00,-3.124999999999999653e-02,-2.187500000000000000e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000002082e-02,-2.187500000000000000e-01,0.000000000000000000e+00,1.562500000000000555e-01,-3.125000000000000694e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [-2.187500000000000000e-01,-3.124999999999999653e-02,0.000000000000000000e+00,1.187500000000000222e+00,-4.374999999999998890e-01,0.000000000000000000e+00,-2.187499999999999445e-01,-3.125000000000005551e-02,0.000000000000000000e+00,-3.125000000000000694e-02,1.562500000000000555e-01,0.000000000000000000e+00,-4.374999999999999445e-01,-6.250000000000005551e-02,0.000000000000000000e+00,-3.125000000000002082e-02,1.562499999999998890e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [-3.125000000000002776e-02,-4.375000000000000000e-01,-3.124999999999999653e-02,-4.374999999999998890e-01,2.375000000000000444e+00,-4.374999999999998890e-01,-3.125000000000005551e-02,-4.374999999999998890e-01,-3.125000000000005551e-02,1.562500000000000555e-01,-6.250000000000001388e-02,1.562500000000000555e-01,-6.250000000000005551e-02,-8.750000000000000000e-01,-6.250000000000005551e-02,1.562499999999998890e-01,-6.250000000000004163e-02,1.562499999999998890e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [0.000000000000000000e+00,-3.125000000000002776e-02,-2.187500000000000000e-01,0.000000000000000000e+00,-4.374999999999998890e-01,1.187500000000000222e+00,0.000000000000000000e+00,-3.125000000000005551e-02,-2.187499999999999445e-01,0.000000000000000000e+00,1.562500000000000555e-01,-3.125000000000000694e-02,0.000000000000000000e+00,-6.250000000000005551e-02,-4.375000000000000000e-01,0.000000000000000000e+00,1.562499999999998890e-01,-3.125000000000002082e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-2.187499999999999445e-01,-3.125000000000005551e-02,0.000000000000000000e+00,5.937500000000001110e-01,-2.187499999999999445e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000002082e-02,1.562499999999998612e-01,0.000000000000000000e+00,-2.187499999999999445e-01,-3.125000000000003469e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000005551e-02,-4.374999999999998890e-01,-3.125000000000005551e-02,-2.187499999999999445e-01,1.187500000000000222e+00,-2.187499999999999445e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,1.562499999999999722e-01,-6.250000000000004163e-02,1.562499999999998612e-01,-3.125000000000002776e-02,-4.374999999999998890e-01,-3.125000000000003469e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000005551e-02,-2.187499999999999445e-01,0.000000000000000000e+00,-2.187499999999999445e-01,5.937500000000001110e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,1.562499999999999722e-01,-3.125000000000002082e-02,0.000000000000000000e+00,-3.125000000000002776e-02,-2.187499999999999722e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [-2.187500000000000000e-01,-3.125000000000002082e-02,0.000000000000000000e+00,-3.125000000000000694e-02,1.562500000000000555e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,1.187500000000000000e+00,-4.375000000000000000e-01,0.000000000000000000e+00,-4.375000000000000000e-01,-6.250000000000004163e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-2.187500000000000000e-01,-3.125000000000002082e-02,0.000000000000000000e+00,-3.125000000000000694e-02,1.562500000000000555e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [-3.125000000000002082e-02,-4.375000000000000000e-01,-3.125000000000002082e-02,1.562500000000000555e-01,-6.250000000000001388e-02,1.562500000000000555e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-4.375000000000000000e-01,2.375000000000000000e+00,-4.375000000000000000e-01,-6.249999999999999306e-02,-8.750000000000000000e-01,-6.250000000000004163e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000002082e-02,-4.375000000000000000e-01,-3.125000000000002082e-02,1.562500000000000555e-01,-6.250000000000001388e-02,1.562500000000000555e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [0.000000000000000000e+00,-3.125000000000002082e-02,-2.187500000000000000e-01,0.000000000000000000e+00,1.562500000000000555e-01,-3.125000000000000694e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-4.375000000000000000e-01,1.187500000000000000e+00,0.000000000000000000e+00,-6.249999999999999306e-02,-4.375000000000000000e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000002082e-02,-2.187500000000000000e-01,0.000000000000000000e+00,1.562500000000000555e-01,-3.125000000000000694e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [-3.125000000000000694e-02,1.562500000000000555e-01,0.000000000000000000e+00,-4.374999999999999445e-01,-6.250000000000005551e-02,0.000000000000000000e+00,-3.125000000000002082e-02,1.562499999999999722e-01,0.000000000000000000e+00,-4.375000000000000000e-01,-6.249999999999999306e-02,0.000000000000000000e+00,2.375000000000000000e+00,-8.749999999999998890e-01,0.000000000000000000e+00,-4.374999999999998890e-01,-6.250000000000011102e-02,0.000000000000000000e+00,-3.125000000000000694e-02,1.562500000000000555e-01,0.000000000000000000e+00,-4.374999999999999445e-01,-6.250000000000005551e-02,0.000000000000000000e+00,-3.125000000000002082e-02,1.562499999999998890e-01,0.000000000000000000e+00],
    [1.562500000000000555e-01,-6.250000000000001388e-02,1.562500000000000555e-01,-6.250000000000005551e-02,-8.750000000000000000e-01,-6.250000000000005551e-02,1.562499999999998612e-01,-6.250000000000004163e-02,1.562499999999999722e-01,-6.250000000000004163e-02,-8.750000000000000000e-01,-6.249999999999999306e-02,-8.749999999999998890e-01,4.750000000000000000e+00,-8.749999999999998890e-01,-6.250000000000011102e-02,-8.749999999999997780e-01,-6.250000000000011102e-02,1.562500000000000555e-01,-6.250000000000001388e-02,1.562500000000000555e-01,-6.250000000000005551e-02,-8.750000000000000000e-01,-6.250000000000005551e-02,1.562499999999998890e-01,-6.250000000000004163e-02,1.562499999999998890e-01],
    [0.000000000000000000e+00,1.562500000000000555e-01,-3.125000000000000694e-02,0.000000000000000000e+00,-6.250000000000005551e-02,-4.375000000000000000e-01,0.000000000000000000e+00,1.562499999999998612e-01,-3.125000000000002082e-02,0.000000000000000000e+00,-6.250000000000004163e-02,-4.375000000000000000e-01,0.000000000000000000e+00,-8.749999999999998890e-01,2.375000000000000000e+00,0.000000000000000000e+00,-6.250000000000011102e-02,-4.374999999999998890e-01,0.000000000000000000e+00,1.562500000000000555e-01,-3.125000000000000694e-02,0.000000000000000000e+00,-6.250000000000005551e-02,-4.375000000000000000e-01,0.000000000000000000e+00,1.562499999999998890e-01,-3.125000000000002082e-02],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000002082e-02,1.562499999999998890e-01,0.000000000000000000e+00,-2.187499999999999445e-01,-3.125000000000002776e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-4.374999999999998890e-01,-6.250000000000011102e-02,0.000000000000000000e+00,1.187500000000000222e+00,-4.374999999999998890e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000002082e-02,1.562499999999998612e-01,0.000000000000000000e+00,-2.187499999999999445e-01,-3.125000000000003469e-02,0.000000000000000000e+00],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,1.562499999999998890e-01,-6.250000000000004163e-02,1.562499999999998890e-01,-3.125000000000003469e-02,-4.374999999999998890e-01,-3.125000000000002776e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-6.250000000000011102e-02,-8.749999999999997780e-01,-6.250000000000011102e-02,-4.374999999999998890e-01,2.375000000000000444e+00,-4.374999999999998890e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,1.562499999999999722e-01,-6.250000000000004163e-02,1.562499999999998612e-01,-3.125000000000002776e-02,-4.374999999999998890e-01,-3.125000000000003469e-02],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,1.562499999999998890e-01,-3.125000000000002082e-02,0.000000000000000000e+00,-3.125000000000003469e-02,-2.187499999999999722e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-6.250000000000011102e-02,-4.374999999999998890e-01,0.000000000000000000e+00,-4.374999999999998890e-01,1.187500000000000222e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,1.562499999999999722e-01,-3.125000000000002082e-02,0.000000000000000000e+00,-3.125000000000002776e-02,-2.187499999999999722e-01],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-2.187500000000000000e-01,-3.125000000000002082e-02,0.000000000000000000e+00,-3.125000000000000694e-02,1.562500000000000555e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,5.937500000000000000e-01,-2.187500000000000000e-01,0.000000000000000000e+00,-2.187500000000000000e-01,-3.125000000000001388e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000002082e-02,-4.375000000000000000e-01,-3.125000000000002082e-02,1.562500000000000555e-01,-6.250000000000001388e-02,1.562500000000000555e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-2.187500000000000000e-01,1.187500000000000000e+00,-2.187500000000000000e-01,-3.124999999999999653e-02,-4.375000000000000000e-01,-3.125000000000001388e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000002082e-02,-2.187500000000000000e-01,0.000000000000000000e+00,1.562500000000000555e-01,-3.125000000000000694e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-2.187500000000000000e-01,5.937500000000000000e-01,0.000000000000000000e+00,-3.124999999999999653e-02,-2.187500000000000000e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000000694e-02,1.562500000000000555e-01,0.000000000000000000e+00,-4.374999999999999445e-01,-6.250000000000005551e-02,0.000000000000000000e+00,-3.125000000000002082e-02,1.562499999999999722e-01,0.000000000000000000e+00,-2.187500000000000000e-01,-3.124999999999999653e-02,0.000000000000000000e+00,1.187500000000000000e+00,-4.374999999999999445e-01,0.000000000000000000e+00,-2.187499999999999445e-01,-3.125000000000004857e-02,0.000000000000000000e+00],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,1.562500000000000555e-01,-6.250000000000001388e-02,1.562500000000000555e-01,-6.250000000000005551e-02,-8.750000000000000000e-01,-6.250000000000005551e-02,1.562499999999998612e-01,-6.250000000000004163e-02,1.562499999999999722e-01,-3.125000000000001388e-02,-4.375000000000000000e-01,-3.124999999999999653e-02,-4.374999999999999445e-01,2.375000000000000000e+00,-4.374999999999999445e-01,-3.125000000000005551e-02,-4.374999999999998890e-01,-3.125000000000004857e-02],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,1.562500000000000555e-01,-3.125000000000000694e-02,0.000000000000000000e+00,-6.250000000000005551e-02,-4.375000000000000000e-01,0.000000000000000000e+00,1.562499999999998612e-01,-3.125000000000002082e-02,0.000000000000000000e+00,-3.125000000000001388e-02,-2.187500000000000000e-01,0.000000000000000000e+00,-4.374999999999999445e-01,1.187500000000000000e+00,0.000000000000000000e+00,-3.125000000000005551e-02,-2.187499999999999722e-01],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000002082e-02,1.562499999999998890e-01,0.000000000000000000e+00,-2.187499999999999445e-01,-3.125000000000002776e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-2.187499999999999445e-01,-3.125000000000005551e-02,0.000000000000000000e+00,5.937500000000001110e-01,-2.187499999999999445e-01,0.000000000000000000e+00],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,1.562499999999998890e-01,-6.250000000000004163e-02,1.562499999999998890e-01,-3.125000000000003469e-02,-4.374999999999998890e-01,-3.125000000000002776e-02,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000004857e-02,-4.374999999999998890e-01,-3.125000000000005551e-02,-2.187499999999999445e-01,1.187500000000000222e+00,-2.187499999999999445e-01],
    [0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,1.562499999999998890e-01,-3.125000000000002082e-02,0.000000000000000000e+00,-3.125000000000003469e-02,-2.187499999999999722e-01,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,0.000000000000000000e+00,-3.125000000000004857e-02,-2.187499999999999722e-01,0.000000000000000000e+00,-2.187499999999999445e-01,5.937500000000001110e-01]])

#------------------------------------------------------------------------------#
BasicsTest().test_primal_vem_2d_iso_simplex_convergence()

